// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArgContainer.proto

#ifndef PROTOBUF_ArgContainer_2eproto__INCLUDED
#define PROTOBUF_ArgContainer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ArgContainer_2eproto();
void protobuf_AssignDesc_ArgContainer_2eproto();
void protobuf_ShutdownFile_ArgContainer_2eproto();

class ArgContainer;

// ===================================================================

class ArgContainer : public ::google::protobuf::MessageLite {
public:
    ArgContainer();
    virtual ~ArgContainer();

    ArgContainer(const ArgContainer& from);

    inline ArgContainer& operator=(const ArgContainer& from) {
        CopyFrom(from);
        return *this;
    }

    static const ArgContainer& default_instance();

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    // Returns the internal default instance pointer. This function can
    // return NULL thus should not be used by the user. This is intended
    // for Protobuf internal code. Please use default_instance() declared
    // above instead.
    static inline const ArgContainer* internal_default_instance() {
        return default_instance_;
    }
#endif

    void Swap(ArgContainer* other);

    // implements Message ----------------------------------------------

    ArgContainer* New() const;
    void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
    void CopyFrom(const ArgContainer& from);
    void MergeFrom(const ArgContainer& from);
    void Clear();
    bool IsInitialized() const;

    int ByteSize() const;
    bool MergePartialFromCodedStream(
        ::google::protobuf::io::CodedInputStream* input);
    void SerializeWithCachedSizes(
        ::google::protobuf::io::CodedOutputStream* output) const;
    int GetCachedSize() const { return _cached_size_; }
private:
    void SharedCtor();
    void SharedDtor();
    void SetCachedSize(int size) const;
public:

    ::std::string GetTypeName() const;

    // nested types ----------------------------------------------------

    // accessors -------------------------------------------------------

    // required string functionToCall = 1;
    inline bool has_functiontocall() const;
    inline void clear_functiontocall();
    static const int kFunctionToCallFieldNumber = 1;
    inline const ::std::string& functiontocall() const;
    inline void set_functiontocall(const ::std::string& value);
    inline void set_functiontocall(const char* value);
    inline void set_functiontocall(const char* value, size_t size);
    inline ::std::string* mutable_functiontocall();
    inline ::std::string* release_functiontocall();
    inline void set_allocated_functiontocall(::std::string* functiontocall);

    // repeated int32 args = 2;
    inline int args_size() const;
    inline void clear_args();
    static const int kArgsFieldNumber = 2;
    inline ::google::protobuf::int32 args(int index) const;
    inline void set_args(int index, ::google::protobuf::int32 value);
    inline void add_args(::google::protobuf::int32 value);
    inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
        args() const;
    inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
        mutable_args();

    // @@protoc_insertion_point(class_scope:ArgContainer)
private:
    inline void set_has_functiontocall();
    inline void clear_has_functiontocall();

    ::std::string* functiontocall_;
    ::google::protobuf::RepeatedField< ::google::protobuf::int32 > args_;

    mutable int _cached_size_;
    ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
    friend void  protobuf_AddDesc_ArgContainer_2eproto_impl();
#else
    friend void  protobuf_AddDesc_ArgContainer_2eproto();
#endif
    friend void protobuf_AssignDesc_ArgContainer_2eproto();
    friend void protobuf_ShutdownFile_ArgContainer_2eproto();

    void InitAsDefaultInstance();
    static ArgContainer* default_instance_;
};
// ===================================================================


// ===================================================================

// ArgContainer

// required string functionToCall = 1;
inline bool ArgContainer::has_functiontocall() const {
    return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArgContainer::set_has_functiontocall() {
    _has_bits_[0] |= 0x00000001u;
}
inline void ArgContainer::clear_has_functiontocall() {
    _has_bits_[0] &= ~0x00000001u;
}
inline void ArgContainer::clear_functiontocall() {
    if (functiontocall_ != &::google::protobuf::internal::kEmptyString) {
        functiontocall_->clear();
    }
    clear_has_functiontocall();
}
inline const ::std::string& ArgContainer::functiontocall() const {
    return *functiontocall_;
}
inline void ArgContainer::set_functiontocall(const ::std::string& value) {
    set_has_functiontocall();
    if (functiontocall_ == &::google::protobuf::internal::kEmptyString) {
        functiontocall_ = new ::std::string;
    }
    functiontocall_->assign(value);
}
inline void ArgContainer::set_functiontocall(const char* value) {
    set_has_functiontocall();
    if (functiontocall_ == &::google::protobuf::internal::kEmptyString) {
        functiontocall_ = new ::std::string;
    }
    functiontocall_->assign(value);
}
inline void ArgContainer::set_functiontocall(const char* value, size_t size) {
    set_has_functiontocall();
    if (functiontocall_ == &::google::protobuf::internal::kEmptyString) {
        functiontocall_ = new ::std::string;
    }
    functiontocall_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArgContainer::mutable_functiontocall() {
    set_has_functiontocall();
    if (functiontocall_ == &::google::protobuf::internal::kEmptyString) {
        functiontocall_ = new ::std::string;
    }
    return functiontocall_;
}
inline ::std::string* ArgContainer::release_functiontocall() {
    clear_has_functiontocall();
    if (functiontocall_ == &::google::protobuf::internal::kEmptyString) {
        return NULL;
    }
    else {
        ::std::string* temp = functiontocall_;
        functiontocall_ = const_cast<::std::string*>(&::google::protobuf::internal::kEmptyString);
        return temp;
    }
}
inline void ArgContainer::set_allocated_functiontocall(::std::string* functiontocall) {
    if (functiontocall_ != &::google::protobuf::internal::kEmptyString) {
        delete functiontocall_;
    }
    if (functiontocall) {
        set_has_functiontocall();
        functiontocall_ = functiontocall;
    }
    else {
        clear_has_functiontocall();
        functiontocall_ = const_cast<::std::string*>(&::google::protobuf::internal::kEmptyString);
    }
}

// repeated int32 args = 2;
inline int ArgContainer::args_size() const {
    return args_.size();
}
inline void ArgContainer::clear_args() {
    args_.Clear();
}
inline ::google::protobuf::int32 ArgContainer::args(int index) const {
    return args_.Get(index);
}
inline void ArgContainer::set_args(int index, ::google::protobuf::int32 value) {
    args_.Set(index, value);
}
inline void ArgContainer::add_args(::google::protobuf::int32 value) {
    args_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ArgContainer::args() const {
    return args_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ArgContainer::mutable_args() {
    return &args_;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ArgContainer_2eproto__INCLUDED
